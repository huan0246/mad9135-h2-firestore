{"version":3,"sources":["components/Navbar/Navbar.js","components/Home/Home.js","components/AddFavorite/AddFavorite.js","components/App/App.js","index.js"],"names":["Navbar","className","activeclassname","to","exact","Home","meals","drinks","snacks","deleteItem","updateItem","useState","selectId","setSelectId","updatedName","setUpdateName","changeSelectIdAndName","id","name","cancelEdit","updatedInput","e","target","value","saveEditName","category","map","meal","onClick","action","type","required","defaultValue","onChange","drink","snack","AddFavorite","addNewItem","setCategory","newItemName","setNewItemName","history","useHistory","changeCategory","defaultChecked","htmlFor","preventDefault","push","console","log","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","setMeals","setDrinks","setSnacks","mealsdb","collection","drinksdb","snacksdb","getMealsFromDb","getDocs","then","snapshot","mealsArr","docs","forEach","doc","data","catch","err","message","getDrinksFromDb","drinksArr","getSnacksFromDb","snacksArr","useEffect","path","timestamp","Date","now","toString","setDoc","deleteDoc","updateDoc","ReactDOM","render","StrictMode","hashType","document","getElementById"],"mappings":"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","file":"static/js/main.602830dc.chunk.js","sourcesContent":["import React from 'react'\nimport \"./navbar.css\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function Navbar() {\n  return (\n      <div className=\"header\">\n        <h1 className=\"logo\">\n          Foods Collection\n        </h1>\n        <div className=\"links\">\n          <NavLink activeclassname=\"active\" to=\"/\" exact>\n            Home\n          </NavLink>\n          <NavLink activeclassname=\"active\" to=\"/addfavorite\">\n            Add Favorite\n          </NavLink>\n        </div>\n      </div>\n  );\n}\n","import React, { useState } from 'react'\nimport \"./home.css\";\n\nexport default function Home({ meals, drinks, snacks, deleteItem, updateItem }) {\n  const [selectId, setSelectId] = useState(0);\n  const [updatedName, setUpdateName] = useState('');\n\n  function changeSelectIdAndName(id, name) {\n    setSelectId(id);\n    setUpdateName(name);\n  }\n\n  function cancelEdit() {\n    setSelectId(0);\n  }\n\n  function updatedInput(e){\n    setUpdateName(e.target.value)\n  }\n\n  function saveEditName(category, id, name){\n    updateItem(category, id, name);\n    setSelectId(0);\n  }\n\n  return (\n    <div className=\"homePage\">\n      <ul className=\"categoryUl\">\n        <li className=\"categoryLi\">\n          <h3>Meals</h3>\n          <ul className=\"itemUl\">\n            {meals !== null &&\n              meals.map((meal) => (\n                <li key={meal.id} className=\"itemLi\">\n                  {selectId !== meal.id && (\n                    <div className=\"itemDiv\">\n                      <div>{meal.name}</div>\n                      <div className=\"btnGroup\">\n                        <button\n                          onClick={() =>\n                            changeSelectIdAndName(meal.id, meal.name)\n                          }\n                        >\n                          Edit\n                        </button>\n                        <button onClick={() => deleteItem(\"meals\", meal.id)}>\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                  {selectId === meal.id && (\n                    <form action=\"\" className=\"editForm\">\n                      <div>\n                        <input\n                          type=\"text\"\n                          id=\"inputName\"\n                          required\n                          defaultValue={updatedName}\n                          onChange={updatedInput}\n                        />\n                      </div>\n                      <div className=\"editBtnGroup\">\n                        <button onClick={cancelEdit}>Cancel</button>\n                        <button\n                          onClick={() =>\n                            saveEditName(\"meals\", meal.id, updatedName)\n                          }\n                        >\n                          Save\n                        </button>\n                      </div>\n                    </form>\n                  )}\n                </li>\n              ))}\n          </ul>\n        </li>\n\n        <li className=\"categoryLi\">\n          <h3>Drinks</h3>\n          <ul className=\"itemUl\">\n            {drinks !== null &&\n              drinks.map((drink) => (\n                <li key={drink.id} className=\"itemLi\">\n                  {selectId !== drink.id && (\n                    <div className=\"itemDiv\">\n                      <div>{drink.name}</div>\n                      <div className=\"btnGroup\">\n                        <button\n                          onClick={() =>\n                            changeSelectIdAndName(drink.id, drink.name)\n                          }\n                        >\n                          Edit\n                        </button>\n                        <button onClick={() => deleteItem(\"drinks\", drink.id)}>\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                  {selectId === drink.id && (\n                    <form action=\"\" className=\"editForm\">\n                      <div>\n                        <input\n                          type=\"text\"\n                          id=\"inputName\"\n                          required\n                          defaultValue={updatedName}\n                          onChange={updatedInput}\n                        />\n                      </div>\n                      <div className=\"editBtnGroup\">\n                        <button onClick={cancelEdit}>Cancel</button>\n                        <button\n                          onClick={() =>\n                            saveEditName(\"drinks\", drink.id, updatedName)\n                          }\n                        >\n                          Save\n                        </button>\n                      </div>\n                    </form>\n                  )}\n                </li>\n              ))}\n          </ul>\n        </li>\n\n        <li className=\"categoryLi\">\n          <h3>Snacks</h3>\n          <ul className=\"itemUl\">\n            {snacks !== null &&\n              snacks.map((snack) => (\n                <li key={snack.id} className=\"itemLi\">\n                  {selectId !== snack.id && (\n                    <div className=\"itemDiv\">\n                      <div>{snack.name}</div>\n                      <div className=\"btnGroup\">\n                        <button\n                          onClick={() =>\n                            changeSelectIdAndName(snack.id, snack.name)\n                          }\n                        >\n                          Edit\n                        </button>\n                        <button onClick={() => deleteItem(\"snacks\", snack.id)}>\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                  {selectId === snack.id && (\n                    <form action=\"\" className=\"editForm\">\n                      <div>\n                        <input\n                          type=\"text\"\n                          id=\"inputName\"\n                          required\n                          defaultValue={updatedName}\n                          onChange={updatedInput}\n                        />\n                      </div>\n                      <div className=\"editBtnGroup\">\n                        <button onClick={cancelEdit}>Cancel</button>\n                        <button\n                          onClick={() =>\n                            saveEditName(\"snacks\", snack.id, updatedName)\n                          }\n                        >\n                          Save\n                        </button>\n                      </div>\n                    </form>\n                  )}\n                </li>\n              ))}\n          </ul>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React, { useState } from 'react'\nimport \"./addFavorite.css\";\nimport { useHistory } from \"react-router\";\n\nexport default function AddFavorite({ addNewItem }) {\n  const [category, setCategory] = useState(\"meals\");\n  const [newItemName, setNewItemName] = useState(null);\n  const history = useHistory()\n\n  function submitForm(e) {\n    e.preventDefault();\n    if (newItemName !== null) {\n      addNewItem(category, newItemName);\n      //console.log(category, newItemName)\n      history.push('/')\n    } else {\n      console.log('xxx')\n    }\n  }\n\n  function changeCategory(e) {\n    //console.log(e.target.value);\n    setCategory(e.target.value);\n  }\n\n  function changeName(e) {\n    //console.log(e.target.value);\n    setNewItemName(e.target.value);\n  }\n\n  return (\n    <div className=\"addFavorite\">\n      <form action=\"\">\n        <div className=\"formContent\">\n          <p>Select a category:</p>\n          <div className=\"inputPair\">\n            <input\n              type=\"radio\"\n              id=\"addMeal\"\n              name=\"addFavorite\"\n              value=\"meals\"\n              defaultChecked\n              onChange={changeCategory}\n            />\n            <label htmlFor=\"addMeal\">Meal</label>\n          </div>\n          <div className=\"inputPair\">\n            <input\n              type=\"radio\"\n              id=\"addDrink\"\n              name=\"addFavorite\"\n              value=\"drinks\"\n              onChange={changeCategory}\n            />\n              <label htmlFor=\"addDrink\">Drink</label>\n          </div>\n          <div className=\"inputPair\">\n            <input\n              type=\"radio\"\n              id=\"addSnack\"\n              name=\"addFavorite\"\n              value=\"snacks\"\n              onChange={changeCategory}\n            />\n            <label htmlFor=\"addSnack\">Snack</label>\n          </div>\n        </div>\n        <div className=\"inputName\">\n          <label htmlFor=\"inputName\" className=\"nameLabel\">Food Name: </label>\n          <input type=\"text\" id=\"inputName\" onChange={changeName} required />\n        </div>\n        <div>\n          <button onClick={submitForm} className=\"submitBtn\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from '../Navbar/Navbar'\nimport Home from '../Home/Home'\nimport AddFavorite from '../AddFavorite/AddFavorite'\nimport { initializeApp } from 'firebase/app'\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  addDoc,\n  deleteDoc,\n  doc,\n  setDoc,\n  updateDoc,\n} from \"firebase/firestore\";\nimport { Switch, Route } from \"react-router-dom\";\n\n\nfunction App() {\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyBau2l_7JBEKCQhXqRJXel3K_m0Cyu_Qes\",\n    authDomain: \"h3-firestore.firebaseapp.com\",\n    projectId: \"h3-firestore\",\n    storageBucket: \"h3-firestore.appspot.com\",\n    messagingSenderId: \"840794726230\",\n    appId: \"1:840794726230:web:75af9fae2e3bbd300d80f7\",\n  };\n\n  initializeApp(firebaseConfig)\n\n  const db = getFirestore()\n\n  const [meals, setMeals] = useState(null);\n  const [drinks, setDrinks] = useState(null);\n  const [snacks, setSnacks] = useState(null);\n\n  const mealsdb = collection(db, 'meals');\n  const drinksdb = collection(db, \"drinks\");\n  const snacksdb = collection(db, \"snacks\");\n\n\n\n  function getMealsFromDb() {\n    getDocs(mealsdb)\n      .then((snapshot) => {\n        let mealsArr = [];\n        snapshot.docs.forEach((doc) => {\n          mealsArr.push({ ...doc.data(), id: doc.id });\n        });\n        setMeals(mealsArr);\n        //console.log(mealsArr);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }\n\n  function getDrinksFromDb() {\n    getDocs(drinksdb)\n      .then((snapshot) => {\n        let drinksArr = [];\n        snapshot.docs.forEach((doc) => {\n          drinksArr.push({ ...doc.data(), id: doc.id });\n        });\n        setDrinks(drinksArr);\n        //console.log(drinksArr);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }\n\n  function getSnacksFromDb() {\n    getDocs(snacksdb)\n      .then((snapshot) => {\n        let snacksArr = [];\n        snapshot.docs.forEach((doc) => {\n          snacksArr.push({ ...doc.data(), id: doc.id });\n        });\n        setSnacks(snacksArr);\n        //console.log(snacksArr);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }\n\n  function addNewItem(category, newItemName) {\n    if (category === 'meals'){\n      let timestamp = Date.now().toString()\n      setDoc(doc(db, \"meals\", timestamp), {\n        id: timestamp,\n        name: newItemName,\n      })\n        .then(() => {\n          getMealsFromDb();\n        })\n        .catch((err) => console.log(err.message));\n    } else if (category === 'drinks'){\n      let timestamp = Date.now().toString();\n      setDoc(doc(db, \"drinks\", timestamp), {\n        id: timestamp,\n        name: newItemName,\n      })\n        .then(() => {\n          getDrinksFromDb();\n        })\n        .catch((err) => console.log(err.message));\n    } else if (category === 'snacks'){\n      let timestamp = Date.now().toString();\n      setDoc(doc(db, \"snacks\", timestamp), {\n        id: timestamp,\n        name: newItemName,\n      })\n        .then(() => {\n          getSnacksFromDb();\n        })\n        .catch((err) => console.log(err.message));\n    }\n    //console.log(category, newItemName);\n  }\n\n  function deleteItem(category, id){\n    deleteDoc(doc(db, category, id))\n    .then(() => {\n      console.log('deleted')\n      getMealsFromDb();\n      getDrinksFromDb();\n      getSnacksFromDb();\n    })\n    .catch((err) => {\n      console.log(err.message)\n    });\n    //console.log(id, category)\n  }\n\n  function updateItem(category, id, name) {\n    if (category === 'meals'){\n      updateDoc(doc(db, \"meals\", id), {name}).then(() => {\n        getMealsFromDb();\n      })\n      .catch((err) => console.log(err.message));\n    } else if (category === 'drinks'){\n      updateDoc(doc(db, \"drinks\", id), { name })\n        .then(() => {\n          getDrinksFromDb();\n        })\n        .catch((err) => console.log(err.message));\n    } else if (category === 'snacks'){\n      updateDoc(doc(db, \"snacks\", id), { name })\n        .then(() => {\n          getSnacksFromDb();\n        })\n        .catch((err) => console.log(err.message));\n    }\n  }\n\n  useEffect(() => {\n    getMealsFromDb();\n    getDrinksFromDb();\n    getSnacksFromDb();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <Navbar />\n      </header>\n      <main>\n        <Switch>\n          <Route path=\"/addfavorite\">\n            <AddFavorite addNewItem={addNewItem} />\n          </Route>\n          <Route path=\"/\">\n            <Home\n              drinks={drinks}\n              meals={meals}\n              snacks={snacks}\n              deleteItem={deleteItem}\n              updateItem={updateItem}\n            />\n          </Route>\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter hashType=\"hashbang\">\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}